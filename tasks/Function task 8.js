let calculateRoots = function (a, b, c) {
    let dis = b * b - 4 * a * c;
    let message;

    if (dis < 0) {
        message = "Корней нет";
    }
    if (dis == 0) {
        let memory = -b / (2 * a);
        message = "Корень равен " + memory;
    }
    if (dis > 0) {
        let first = (-b + Math.sqrt(dis)) / (2 * a);
        let second = (-b - Math.sqrt(dis)) / (2 * a)
        message = "Первый корень равен " + first + ", второй корень равен " + second;
    }
    return (message);
}

/* Техническое задание

Мяу! Напиши функцию calculateRoots, которая будет считать корни через дискриминант.

Формула дискриминанта выглядит так: b * b - 4 * a * c. Функция должна принимать на вход три параметра: a, b, c. Это коэффициенты из формулы дискриминанта.

Если полученное число меньше 0, функция должна возвращать строку 'Корней нет'.

Если результат равен 0, корень в уравнении один. Функция должна возвращать строку 'Корень равен ' + найденный корень. Формула корня в этом случае такая: -b / (2 * a).

А вот если дискриминант больше 0, корня два. Придётся посчитать каждый и добавить результат в строку. Формула для первого корня: (-b + √D) / (2 * a). Формула для второго корня: (-b - √D) / (2 * a). Функция должна возвращать строку 'Первый корень равен ' + первый корень + ', второй корень равен ' + второй корень.

*/
  